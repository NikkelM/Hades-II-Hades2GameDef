---@meta SGG_Modding-Hades2GameDef-Scripts-EventLogic
local game = {}

function game.ActivateForPriorityConversation(a, b, c, d) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.ActivateForPriorityConversation ...

function game.ActivateObjects(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.ActivateObjects ...

function game.ActivateOneOfAPrePlacedGroupSet(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.ActivateOneOfAPrePlacedGroupSet ...

function game.ActivatePrePlaced(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.ActivatePrePlaced ...

function game.ActivatePrePlacedObstacles(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.ActivatePrePlacedObstacles ...

function game.ActivatePrePlacedUnits(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.ActivatePrePlacedUnits ...

function game.ActivateRotatingNPCs(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.ActivateRotatingNPCs ...

function game.ArachneCostumeChoice(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.ArachneCostumeChoice ...

function game.CallFunctionName(a, b, c, d, e, f, g, h, i, ...) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.CallFunctionName ...

function game.CheckPriorityConversations(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.CheckPriorityConversations ...

function game.CirceBlessingChoice(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.CirceBlessingChoice ...

function game.CirceEnlarge(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.CirceEnlarge ...

function game.CirceHeal(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.CirceHeal ...

function game.CirceMetaUpgradeRarity(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.CirceMetaUpgradeRarity ...

function game.CircePetMultiplier(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.CircePetMultiplier ...

function game.CirceRandomMetaUpgrade(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.CirceRandomMetaUpgrade ...

function game.CirceRemoveShrineUpgrades(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.CirceRemoveShrineUpgrades ...

function game.CirceShrink(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.CirceShrink ...

function game.ClearPauseMenuTakeover() end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.ClearPauseMenuTakeover ...

function game.CollectRemainingMercenaries(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.CollectRemainingMercenaries ...

function game.EarlyEndSkellyHitQuest(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.EarlyEndSkellyHitQuest ...

function game.EchoChoice(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.EchoChoice ...

function game.EchoIncreaseStats(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.EchoIncreaseStats ...

function game.EchoLastReward(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.EchoLastReward ...

function game.EchoLastRunBoon() end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.EchoLastRunBoon ...

function game.EchoRefillLastStands(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.EchoRefillLastStands ...

function game.EndSkellyHitQuest(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.EndSkellyHitQuest ...

function game.GetEchoLastRewardDescription(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.GetEchoLastRewardDescription ...

function game.GetLootPoint(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.GetLootPoint ...

function game.HandleChallengeLoot(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.HandleChallengeLoot ...

function game.HandleChallengeLootDecay(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.HandleChallengeLootDecay ...

function game.IcarusBenefitChoice(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.IcarusBenefitChoice ...

function game.IsActivationEligible(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.IsActivationEligible ...

function game.MedeaCurseChoice(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.MedeaCurseChoice ...

function game.NarcissusBenefitChoice(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.NarcissusBenefitChoice ...

function game.NemesisDamageContestHit(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.NemesisDamageContestHit ...

function game.NemesisDamageContestTimer(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.NemesisDamageContestTimer ...

function game.NemesisTradeChoice(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.NemesisTradeChoice ...

function game.OnionTransformation(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.OnionTransformation ...

function game.PauseMenuTakeoverClosed() end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.PauseMenuTakeoverClosed ...

function game.RunEvents(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.RunEvents ...

function game.RunEventsGeneric(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.RunEventsGeneric ...

function game.RunThreadedEvents(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.RunThreadedEvents ...

function game.SelectFieldsDoorCageCount(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.SelectFieldsDoorCageCount ...

function game.SetupPauseMenuTakeover(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.SetupPauseMenuTakeover ...

function game.SetupPrePlacedUnits(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.SetupPrePlacedUnits ...

function game.SetupUnits(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.SetupUnits ...

function game.ShouldRotatorActivate(a, b, c, d) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.ShouldRotatorActivate ...

function game.SpawnAllLoot(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.SpawnAllLoot ...

function game.StartNemesisDamageContest(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.StartNemesisDamageContest ...

function game.StartSkellyCastQuest(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.StartSkellyCastQuest ...

function game.StartSkellyHitQuest(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.StartSkellyHitQuest ...

function game.StartSkellyInventoryQuest(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.StartSkellyInventoryQuest ...

function game.StartSkellyShadeMercQuest(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.StartSkellyShadeMercQuest ...

function game.StartSkellySprintQuest(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.StartSkellySprintQuest ...

function game.StartSkellyWeaponTutorial(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.StartSkellyWeaponTutorial ...

function game.StripInteractTextRequirements(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.StripInteractTextRequirements ...

function game.StripRequirements(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.StripRequirements ...

function game.UpdateSkellyHitQuest(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-EventLogic.UpdateSkellyHitQuest ...

return game