---@meta SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic
local game = {}

function game.PulseObjectivePositive(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.PulseObjectivePositive ...

function game.ClearObjectives() end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.ClearObjectives ...

function game.ResetObjectives() end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.ResetObjectives ...

function game.HideObjectivesUI() end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.HideObjectivesUI ...

function game.CheckObjectiveSetSource(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.CheckObjectiveSetSource ...

function game.CreateObjectiveUI() end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.CreateObjectiveUI ...

function game.IsObjectiveSetEligible(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.IsObjectiveSetEligible ...

function game.CheckAutoObjectiveSets(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.CheckAutoObjectiveSets ...

function game.CheckObjectiveSet(a, b, c) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.CheckObjectiveSet ...

function game.ShowObjectivesUI() end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.ShowObjectivesUI ...

function game.MarkObjectiveComplete(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.MarkObjectiveComplete ...

function game.UpdateObjective(a, b, c, d) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.UpdateObjective ...

function game.UpdateObjectiveDescription(a, b, c, d) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.UpdateObjectiveDescription ...

function game.AddActiveObjective(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.AddActiveObjective ...

function game.MarkObjectivesComplete(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.MarkObjectivesComplete ...

function game.PulseObjectiveNegative(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.PulseObjectiveNegative ...

function game.CheckActiveObjectivesStatus() end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.CheckActiveObjectivesStatus ...

function game.MarkObjectiveFailed(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.MarkObjectiveFailed ...

function game.ShowObjective(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.ShowObjective ...

function game.ShowObjectiveSet(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-ObjectiveLogic.ShowObjectiveSet ...

return game