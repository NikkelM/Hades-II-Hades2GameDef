---@meta SGG_Modding-Hades2GameDef-Scripts-StoreLogic
local game = {}

function game.AwardRandomStoreItem(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.AwardRandomStoreItem ...

function game.CheckChallengeSwitchItemValidity(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.CheckChallengeSwitchItemValidity ...

function game.CheckHeraclesShoppingEvent(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.CheckHeraclesShoppingEvent ...

function game.CheckNemesisShoppingEvent(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.CheckNemesisShoppingEvent ...

function game.CheckShoppingEventThread(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.CheckShoppingEventThread ...

function game.CloseStoreScreen(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.CloseStoreScreen ...

function game.CreateStoreButtons(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.CreateStoreButtons ...

function game.DestroyStoreButtons(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.DestroyStoreButtons ...

function game.FillInShopOptions(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.FillInShopOptions ...

function game.GetPreviousStore(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.GetPreviousStore ...

function game.GiveRandomTemporaryKeepsake(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.GiveRandomTemporaryKeepsake ...

function game.HandleStorePurchase(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.HandleStorePurchase ...

function game.MouseOffWellShopButton(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.MouseOffWellShopButton ...

function game.MouseOverWellShopButton(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.MouseOverWellShopButton ...

function game.RecalculateStoreTraitDurations(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.RecalculateStoreTraitDurations ...

function game.RemoveStoreItem(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.RemoveStoreItem ...

function game.RerollStore(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.RerollStore ...

function game.RunShopGeneration(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.RunShopGeneration ...

function game.SetupWorldShop(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.SetupWorldShop ...

function game.ShowStoreScreen() end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.ShowStoreScreen ...

function game.SpawnStoreItemInWorld(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.SpawnStoreItemInWorld ...

function game.SpawnStoreItemsInWorld(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.SpawnStoreItemsInWorld ...

function game.StartShopping(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.StartShopping ...

function game.StartUpStore() end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.StartUpStore ...

function game.StoreItemEligible(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.StoreItemEligible ...

function game.StoreItemNameEligible(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.StoreItemNameEligible ...

function game.UnwrapRandomLoot(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.UnwrapRandomLoot ...

function game.UpdateCostButton(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.UpdateCostButton ...

function game.UpdateCostText(a, b) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.UpdateCostText ...

function game.UpdateStoreOptionsDictionary() end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.UpdateStoreOptionsDictionary ...

function game.UpdateStoreReroll(a) end
---@alias SGG_Modding-Hades2GameDef-Scripts-StoreLogic.UpdateStoreReroll ...

return game